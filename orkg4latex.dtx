% \iffalse meta-comment
% !TEX program  = pdfLaTeX
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
orkg4latex --- description text
E-mail: you@your.domain
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

Some text about the package: probably the same as the abstract.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
orkg4latex --- description text
E-mail: you@your.domain
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2009 by You <you@your.domain>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
You.

This work consists of the file  orkg4latex.dtx
and the derived files           orkg4latex.ins,
                                orkg4latex.pdf and
                                orkg4latex.sty.

\endpostamble
\usedir{tex/latex/orkg4latex}
\generate{
  \file{\jobname.sty}{\from{\jobname.dtx}{package}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/orkg4latex}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/orkg4latex}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{orkg4latex}[2009/10/06 v1.0 description text]
%</package>
%<*driver>
\documentclass{ltxdoc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{\jobname}
\usepackage[numbered]{hypdoc}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
%\GetFileInfo{\jobname.sty}
%
%\title{^^A
%  \textsf{orkg4latex} --- description text\thanks{^^A
%    This file describes version \fileversion, last revised \filedate.^^A
%  }^^A
%}
%\author{^^A
%  You\thanks{E-mail: you@your.domain}^^A
%}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v1.0}{2009/10/06}{First public release}
%
%\DescribeMacro{\examplemacro}
% Some text about an example macro called \cs{examplemacro}, which
% might have an optional argument \oarg{arg1} and mandatory one
% \marg{arg2}.
%
%\StopEventually{^^A
%  \PrintChanges
%  \PrintIndex
%}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
%\begin{macro}{\orkgannotations}
%\changes{v1.0}{2009/10/06}{Some change from the previous version}
%    \begin{macrocode}
\usepackage{environ}

% \metadatamodification
\newcount \metadatamodification
\metadatamodification = 0

% \metadataseparator
\newcount \metadataseparator
\metadataseparator    = `\;

\directlua { 
  ORKG = require('orkg4latex')
}

\newenvironment{background}
  {$\ast$
    \directlua{ORKG.remember_body()}
  }
  { $\ast$ 
    \directlua{ORKG.stop_remember_body()
      ORKG.add_background(ORKG.get_environment_body())
    }
  }

\newenvironment{contribution}
  {$\star$
    \directlua{ORKG.remember_body()}
  }{$\star$
    \directlua{ORKG.stop_remember_body()
      ORKG.add_contribution(ORKG.get_environment_body())
    }
  }

\newenvironment{methods}
  {$\circ$
    \directlua{ORKG.remember_body()}
  }{$\circ$
    \directlua{ORKG.stop_remember_body()
      ORKG.add_methods(ORKG.get_environment_body())
    }
  }

\newenvironment{problem statement}
  {$\diamond$
    \directlua{ORKG.remember_body()}
  }{$\diamond$
    \directlua{ORKG.stop_remember_body()
      ORKG.add_problem_statement(ORKG.get_environment_body())
    }
  }

\newenvironment{results}
  {$\bullet$ 
    \directlua{ORKG.remember_body()}
  }{$\bullet$
    \directlua{ORKG.stop_remember_body()
      ORKG.add_results(ORKG.get_environment_body())
    }
  }

%    \end{macrocode}
%\end{macro}
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%\Finale